#!/usr/bin/env python3
# -*- encoding: utf-8 -*-

from fsdm import ResourceHandler, CoapError, DataType, KvStore
from kubernetes import client, config
#from prometheus_api_client import PrometheusConnect
import os

class ResourceHandler_33627_8(ResourceHandler):
    NAME = "Memory usage"
    DESCRIPTION = '''\
Pod's memory usage.'''
    DATATYPE = DataType.FLOAT
    EXTERNAL_NOTIFY = False

    def read(self,
             instance_id,            # int
             resource_instance_id):  # int for multiple resources, None otherwise
        prometheus_url = os.getenv('PROM_URL')
        if prometheus_url:
            config.load_kube_config()
            v1 = client.CoreV1Api()
            pods = v1.list_namespaced_pod(namespace="default", watch=False)
            prom = PrometheusConnect(url=prometheus_url, disable_ssl=True)
            label_config = {'pod': pods.items[instance_id].metadata.name}
            metric = prom.get_current_metric_value(
                metric_name='container_memory_usage_bytes',
                label_config=label_config,
            )
            print(metric[0].value)
        else:
            print(0.0)



if __name__ == '__main__':
    ResourceHandler_33627_8().main()
